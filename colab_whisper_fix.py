#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å Whisper –≤ Google Colab
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã –≤ Colab
"""

import subprocess
import sys
import logging

logger = logging.getLogger(__name__)

def install_whisper():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ OpenAI Whisper"""
    try:
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å Whisper –≤ Colab...")
        
        # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –≤–µ—Ä—Å–∏–∏
        print("1Ô∏è‚É£ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏...")
        subprocess.run([sys.executable, "-m", "pip", "uninstall", "-y", "whisper"], 
                      capture_output=True)
        subprocess.run([sys.executable, "-m", "pip", "uninstall", "-y", "openai-whisper"], 
                      capture_output=True)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
        print("2Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º OpenAI Whisper...")
        result = subprocess.run([
            sys.executable, "-m", "pip", "install", 
            "openai-whisper", "--upgrade", "--force-reinstall"
        ], capture_output=True, text=True)
        
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.stderr}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
        print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É...")
        try:
            import whisper
            if hasattr(whisper, 'load_model'):
                print("‚úÖ OpenAI Whisper —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                
                # –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                print("4Ô∏è‚É£ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å 'base'...")
                model = whisper.load_model("base")
                print("‚úÖ –ú–æ–¥–µ–ª—å 'base' –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                
                return True
            else:
                print("‚ùå Whisper —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ load_model –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                return False
                
        except ImportError as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å whisper: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

def install_alternative_whisper():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ faster-whisper –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã"""
    try:
        print("üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º faster-whisper –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É...")
        
        result = subprocess.run([
            sys.executable, "-m", "pip", "install", 
            "faster-whisper", "--upgrade"
        ], capture_output=True, text=True)
        
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ faster-whisper: {result.stderr}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º
        try:
            from faster_whisper import WhisperModel
            print("‚úÖ faster-whisper —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
            print("4Ô∏è‚É£ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º faster-whisper –º–æ–¥–µ–ª—å 'base'...")
            model = WhisperModel("base")
            print("‚úÖ faster-whisper –º–æ–¥–µ–ª—å 'base' –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
            
            return True
            
        except ImportError as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å faster-whisper: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ faster-whisper: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï WHISPER –î–õ–Ø COLAB")
    print("=" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π Whisper
    if install_whisper():
        print("\nüéâ OpenAI Whisper –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        return True
    
    print("\n‚ö†Ô∏è OpenAI Whisper –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É...")
    
    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º faster-whisper
    if install_alternative_whisper():
        print("\nüéâ faster-whisper –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        return True
    
    print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω—É –≤–µ—Ä—Å–∏—é Whisper")
    print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å runtime –≤ Colab –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞")
    return False

if __name__ == "__main__":
    success = main()
    if not success:
        print("\nüîß –†–£–ß–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê:")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ Colab:")
        print("!pip uninstall -y whisper openai-whisper")
        print("!pip install openai-whisper --upgrade --force-reinstall")
        print("–ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ runtime")