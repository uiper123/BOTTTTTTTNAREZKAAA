#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Google Colab
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –≤ –æ–±–ª–∞—á–Ω–æ–π —Å—Ä–µ–¥–µ
"""

import os
import sys
import subprocess
import json
import base64
import pickle
from pathlib import Path

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    subprocess.run(['apt', 'update', '-qq'], check=True)
    subprocess.run(['apt', 'install', '-y', 'ffmpeg', 'fonts-liberation'], check=True)
    
    # Python –ø–∞–∫–µ—Ç—ã
    packages = [
        'python-telegram-bot==20.7',
        'yt-dlp',
        'openai-whisper',
        'google-api-python-client',
        'google-auth-httplib2',
        'google-auth-oauthlib',
        'python-dotenv',
        'Pillow',
        'moviepy'
    ]
    
    for package in packages:
        subprocess.run([sys.executable, '-m', 'pip', 'install', '-q', package], check=True)
    
    print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
    folders = ['temp', 'output']
    for folder in folders:
        Path(folder).mkdir(exist_ok=True)
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç
    try:
        import urllib.request
        urllib.request.urlretrieve(
            'https://github.com/google/fonts/raw/main/ofl/roboto/Roboto-Bold.ttf',
            'Obelix Pro.ttf'
        )
        print("‚úÖ –®—Ä–∏—Ñ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!")
    except:
        # Fallback –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç
        subprocess.run(['cp', '/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', 'Obelix Pro.ttf'])
        print("‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç!")

def create_env_file(telegram_token, google_token_base64):
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞...")
    
    env_content = f"""# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN={telegram_token}

# Google Drive Configuration
GOOGLE_OAUTH_TOKEN_BASE64={google_token_base64}

# Video Processing Settings
DEFAULT_CLIP_DURATION=30
DEFAULT_TITLE=–§–†–ê–ì–ú–ï–ù–¢
DEFAULT_SUBTITLE=–ß–∞—Å—Ç—å
WHISPER_MODEL=base
MAX_CHUNK_DURATION=300
"""
    
    with open('.env', 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω!")

def setup_google_oauth():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Google OAuth"""
    print("üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google OAuth...")
    
    print("–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Drive API –≤–∞–º –Ω—É–∂–Ω–æ:")
    print("1. –ü–µ—Ä–µ–π—Ç–∏ –≤ Google Cloud Console")
    print("2. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –∏ –≤–∫–ª—é—á–∏—Ç—å Drive API")
    print("3. –°–æ–∑–¥–∞—Ç—å OAuth 2.0 credentials")
    print("4. –°–∫–∞—á–∞—Ç—å JSON —Ñ–∞–π–ª")
    
    oauth_json = input("–í—Å—Ç–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ OAuth JSON —Ñ–∞–π–ª–∞: ")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å JSON
        json.loads(oauth_json)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open('credentials.json', 'w') as f:
            f.write(oauth_json)
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OAuth flow
        from google_auth_oauthlib.flow import Flow
        
        SCOPES = ['https://www.googleapis.com/auth/drive.file']
        
        flow = Flow.from_client_secrets_file(
            'credentials.json',
            scopes=SCOPES,
            redirect_uri='http://localhost'
        )
        
        auth_url, _ = flow.authorization_url(prompt='consent')
        
        print(f"üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {auth_url}")
        auth_code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ")
        
        flow.fetch_token(code=auth_code)
        credentials = flow.credentials
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        token_data = pickle.dumps(credentials)
        token_base64 = base64.b64encode(token_data).decode('utf-8')
        
        print("‚úÖ Google OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return token_base64
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth: {e}")
        return None

def setup_cookies():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ cookies –¥–ª—è YouTube"""
    print("üç™ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cookies –¥–ª—è YouTube...")
    print("Cookies –ø–æ–º–æ–≥–∞—é—Ç:")
    print("- –°–∫–∞—á–∏–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≤–∏–¥–µ–æ")
    print("- –û–±—Ö–æ–¥–∏—Ç—å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è")
    print("- –ü–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –≤–∏–¥–µ–æ")
    print("- –ò–∑–±–µ–≥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ YouTube")
    
    use_cookies = input("–•–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å cookies? (y/n): ").lower().strip()
    
    if use_cookies in ['y', 'yes', '–¥–∞', '–¥']:
        print("\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è cookies:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ YouTube –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ 'Get cookies.txt LOCALLY'")
        print("3. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ cookies –≤ —Ñ–æ—Ä–º–∞—Ç–µ Netscape")
        print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞")
        print("\n–í—Å—Ç–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ cookies.txt (–¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ 'END'):")
        
        cookies_lines = []
        while True:
            line = input()
            if line.strip().upper() == "END":
                break
            cookies_lines.append(line)
        
        if cookies_lines:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies
            with open('cookies.txt', 'w', encoding='utf-8') as f:
                f.write('\n'.join(cookies_lines))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ cookies
            youtube_cookies = sum(1 for line in cookies_lines if 'youtube.com' in line or 'google.com' in line)
            
            print(f"‚úÖ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! ({len(cookies_lines)} —Å—Ç—Ä–æ–∫)")
            print(f"üé• YouTube cookies: {youtube_cookies}")
            
            if youtube_cookies > 0:
                print("‚úÖ –ú–æ–∂–Ω–æ —Å–∫–∞—á–∏–≤–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –≤–∏–¥–µ–æ!")
                return True
            else:
                print("‚ö†Ô∏è YouTube cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return False
        else:
            print("‚ùå Cookies –Ω–µ –≤–≤–µ–¥–µ–Ω—ã")
            # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
            with open('cookies.txt', 'w') as f:
                f.write('# No cookies\n')
            return False
    else:
        print("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É cookies")
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        with open('cookies.txt', 'w') as f:
            f.write('# No cookies\n')
        return False

def test_setup():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        from youtube_downloader import YouTubeDownloader
        from video_editor import VideoEditor
        from subtitle_generator import SubtitleGenerator
        from google_drive_uploader import GoogleDriveUploader
        from video_processor import VideoProcessor
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã
        downloader = YouTubeDownloader()
        editor = VideoEditor()
        subtitle_gen = SubtitleGenerator()
        uploader = GoogleDriveUploader()
        processor = VideoProcessor()
        
        print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üé¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ YouTube Video Bot –¥–ª—è Google Colab")
    print("=" * 50)
    
    # –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_dependencies()
    
    # –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_environment()
    
    # –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
    telegram_token = input("–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: ")
    
    if not telegram_token:
        print("‚ùå Telegram —Ç–æ–∫–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return
    
    google_token = setup_google_oauth()
    
    if not google_token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Google OAuth!")
        return
    
    # –®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cookies
    cookies_enabled = setup_cookies()
    
    # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    create_env_file(telegram_token, google_token)
    
    # –®–∞–≥ 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if test_setup():
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞:")
        print("   python bot.py")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É")

if __name__ == "__main__":
    main()